def encrypt(message, key):
    encrypted_message = ''  # Инициализация пустой строки для хранения зашифрованного сообщения
    for char in message:    # Цикл по каждому символу во входном сообщении
        if char.isalpha():  # Проверка, является ли символ буквой
            shifted = ord(char) + key  # Преобразование символа в его ASCII-значение и применение сдвига (шифрование)
            if char.islower():  # Проверка, является ли символ строчной буквой
                if shifted > ord('z'):  # Гарантия, что новое значение остаётся в пределах ASCII для строчных букв
                    shifted -= 26      # Зацикливание до 'a', если значение превышает 'z'
                elif shifted < ord('a'):  # Гарантия, что новое значение остаётся в пределах ASCII для строчных букв
                    shifted += 26      # Зацикливание до 'z', если значение меньше 'a'
            elif char.isupper():  # Проверка, является ли символ заглавной буквой
                if shifted > ord('Z'):  # Гарантия, что новое значение остаётся в пределах ASCII для заглавных букв
                    shifted -= 26      # Зацикливание до 'A', если значение превышает 'Z'
                elif shifted < ord('A'):  # Гарантия, что новое значение остаётся в пределах ASCII для заглавных букв
                    shifted += 26      # Зацикливание до 'Z', если значение меньше 'A'
            encrypted_message += chr(shifted)  # Добавление зашифрованного символа к зашифрованному сообщению
        else:
            encrypted_message += char  # Если символ не является буквой, добавить его как есть
    return encrypted_message  # Возврат зашифрованного сообщения

def decrypt(encrypted_message, key):
    return encrypt(encrypted_message, -key)  # Дешифрование сводится к шифрованию с отрицательным значением ключа

def main():
    choice = input("Введите 'E' для шифрования или 'D' для дешифрования: ").upper()  # Просьба пользователя сделать выбор

    if choice == 'E':  # Если выбрано шифрование
        message = input("Введите сообщение для шифрования: ")  # Получение сообщения от пользователя
        shift = int(input("Введите ключ шифрования (число): "))  # Получение ключа шифрования от пользователя
        encrypted = encrypt(message, shift)  # Шифрование сообщения с использованием указанного ключа
        print("Зашифрованное сообщение:", encrypted)  # Вывод зашифрованного сообщения
    elif choice == 'D':  # Если выбрано дешифрование
        encrypted_message = input("Введите сообщение для дешифрования: ")  # Получение зашифрованного сообщения
        shift = int(input("Введите ключ, использованный для шифрования: "))  # Получение ключа шифрования
        decrypted = decrypt(encrypted_message, shift)  # Дешифрование сообщения с использованием указанного ключа
        print("Дешифрованное сообщение:", decrypted)  # Вывод дешифрованного сообщения
    else:
        print("Неверный выбор. Пожалуйста, введите 'E' для шифрования или 'D' для дешифрования.")  # Если введён неверный выбор

if __name__ == "__main__":
    main()  # Запуск основной функции при выполнении скрипта напрямую
